INSERT INTO public.users (id, version, birthdate, email, firstname, lastaccess, lastname, login, password, phone, role) VALUES (1, 1, '1986-09-25 00:00:00', 'jocelyn.ntakpe@sopragroup.com', 'Jocelyn', '1986-09-25 00:00:00', 'N''TAKPE', 'jOSS', 'lolilol', '51394', 'ROLE_ADMIN');
INSERT INTO public.users (id, version, birthdate, email, firstname, lastaccess, lastname, login, password, phone, role) VALUES (2, 0, '1988-10-25 00:00:00', 'julien.guerrin@sopragroup.com', 'Julien', '1988-10-25 00:00:00', 'GUERRIN', 'JujuPiwi', 'lolilol', '51365', 'ROLE_USER');
INSERT INTO public.users (id, version, birthdate, email, firstname, lastaccess, lastname, login, password, phone, role) VALUES (3, 0, '1986-05-25 00:00:00', 'charles-eric.giraud@sopragroup.com', 'Charles-Eric', '1986-05-25 00:00:00', 'GIRAUD', 'Selrak', 'lolilol', '51525', 'ROLE_USER');
INSERT INTO public.users (id, version, birthdate, email, firstname, lastaccess, lastname, login, password, phone, role) VALUES (4, 0, '2013-04-30 23:51:09', 'natacha.berges@sopragroup.com', 'Natacha', '2013-04-30 23:51:09', 'BERGES', 'nberges', 'lolilol', '51333', 'ROLE_USER');
INSERT INTO public.users (id, version, birthdate, email, firstname, lastaccess, lastname, login, password, phone, role) VALUES (5, 0, '2013-04-30 23:51:09', 'arnaud.pradelles@sopragroup.com', 'Arnaud', '2013-04-30 23:51:09', 'PRADELLES', 'Piwi', 'lolilol', '51345', 'ROLE_USER');

INSERT INTO public.parameter (id, version, key, value) VALUES (50, 0, 'smtp.host', 'ptx.smtp.corp.sopra');
INSERT INTO public.parameter (id, version, key, value) VALUES (51, 0, 'smtp.port', '25');
INSERT INTO public.parameter (id, version, key, value) VALUES (52, 0, 'smtp.from', 'jtools@sopragroup.com');

INSERT INTO public.quiz (id, version, createdate, execnumber, title, creator_id) VALUES (1, 0, '2013-05-10 16:19:11', 0, 'Java basics', 1);

INSERT INTO public.question (id, version, correctanswer, explanation, firstanswer, fourthanswer, label, number, secondanswer, thirdanswer, duration, quiz_id) VALUES (1, 0, 3, 'Java n''est pas fait pour faire de la programmation fonctionnelle contrairement à Lisp, Haskell, Scala, etc...', 'interprété', 'orienté objet', 'Java n''est pas un langage :', 0, 'compilé', 'fonctionnel', 20, 1);
INSERT INTO public.question (id, version, correctanswer, explanation, firstanswer, fourthanswer, label, number, secondanswer, thirdanswer, duration, quiz_id) VALUES (2, 0, 4, 'Si aucun constructeur n''est défini la JVM en crééra un par défaut. Ensuite, on peut en créer autant que l''on souhaite', '1', '0 ou plusieurs', 'Combien de constructeur peut-on définir pour une classe ?', 1, '0 ou 1', '1 ou plusieurs', 30, 1);
INSERT INTO public.question (id, version, correctanswer, explanation, firstanswer, fourthanswer, label, number, secondanswer, thirdanswer, duration, quiz_id) VALUES (3, 0, 1, 'L''héritage multiple n''est pas supporté en Java mais on peut implémenter plusieurs interfaces', 'Une classe peut implémenter plusieurs interfaces mais doit étendre une seule classe ', 'Une classe doit implémenter une seule interface et étendre une seule classe', 'Quelle proposition est la bonne ?', 2, 'Une classe peut implémenter plusieurs classes mais doit étendre une seule interface ', 'Une classe peut implémenter plusieurs classes et peut étendre plusieurs interfaces', 40, 1);
INSERT INTO public.question (id, version, correctanswer, explanation, firstanswer, fourthanswer, label, number, secondanswer, thirdanswer, duration, quiz_id) VALUES (4, 0, 2, 'Le garbage collector passe quand la heap memory est presque pleine', 'il peut engendrer une fuite mémoire', '', 'Lorsqu''un objet n''est plus référencé ...', 3, 'il peut détruit ou non, c''est au bon vouloir de la JVM', 'il immédiatement détruit par la JVM', 30, 1);